group 'com.glegoux.spnego'
version '1.0-SNAPSHOT'

// plugin versions
final pluginShadowJarVersion = '2.0.4'
final pluginJacocoVersion = '0.8.2'

// language versions
final scalaVersion = '2.11'
final scalaMicroVersion = '12'

// gradle versions
final gradleVersion = '4.0'

// java and scala librairies versions
final finatraVersion = '17.12.0'
final logbackVersion = '1.1.7'
final mockitoCoreVersion = '1.10.19'
final guiceTestlibVersion = '4.2.2'
final junitVersion = '4.12'
final scalaTestVersion = '3.0.5'
final apacheKerbyVersion = '1.1.1'
final commonsCLiVersion = '1.4'

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
  }
}

apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'com.glegoux.spnego.SpnegoServerMain'

jacoco {
  toolVersion = '0.8.2'
  reportsDir = file("${buildDir}/customJacocoReportDir")
}

jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
    html.destination file("${buildDir}/jacocoHtml")
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}


dependencies {
  compile "org.scala-lang:scala-library:${scalaVersion}.${scalaMicroVersion}"
  compile "com.twitter:finatra-http_${scalaVersion}:${finatraVersion}"
  compile "ch.qos.logback:logback-classic:${logbackVersion}"
  compile "com.google.inject.extensions:guice-testlib:${guiceTestlibVersion}"
  compile "org.apache.kerby:kerby-kdc:${apacheKerbyVersion}"
  compile "org.apache.kerby:json-backend:${apacheKerbyVersion}"
  compile "commons-cli:commons-cli:${commonsCLiVersion}"

  testCompile "junit:junit:${junitVersion}"
  testCompile "org.mockito:mockito-core:${mockitoCoreVersion}"
  testCompile "org.scalatest:scalatest_${scalaVersion}:${scalaTestVersion}"
  testCompile "com.twitter:finatra-http_${scalaVersion}:${finatraVersion}:tests"
  testCompile "com.twitter:finatra-jackson_${scalaVersion}:${finatraVersion}:tests"
  testCompile "com.twitter:inject-server_${scalaVersion}:${finatraVersion}:tests"
  testCompile "com.twitter:inject-app_${scalaVersion}:$finatraVersion:tests"
  testCompile "com.twitter:inject-core_${scalaVersion}:${finatraVersion}:tests"
  testCompile "com.twitter:inject-modules_${scalaVersion}:${finatraVersion}:tests"
  testCompile "com.google.inject.extensions:guice-testlib:${guiceTestlibVersion}:tests"
}

task npmInstall(type: Exec) {
  workingDir 'src/main/webapp/'
  commandLine 'npm', 'install'
}

task ngBuild(type: Exec) {
  dependsOn npmInstall

  workingDir 'src/main/webapp/'
  commandLine 'npx', 'ng', 'build'
}

processResources {
  dependsOn ngBuild

  from("src/main/webapp/dist/") {
    into 'public'
  }
}

jar {
  manifest {
    attributes(
      'Implementation-Title': project.name,
      'Implementation-Version': project.version,
      'Main-Class': mainClassName
    )
  }
}

task cleanWebappDist(type: Exec) {
  workingDir 'src/main/webapp'
  commandLine 'rm', '-rf', 'dist/'
}

task cleanWebappNpmModule(type: Exec) {
  workingDir 'src/main/webapp'
  commandLine 'rm', '-rf', 'node_modules/'
}

clean {
  dependsOn cleanWebappDist
  dependsOn cleanWebappNpmModule
}
